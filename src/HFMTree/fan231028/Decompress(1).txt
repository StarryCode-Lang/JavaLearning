package com.cl.hfmTree1018;

import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

//解压
public class Decompress {

    public static void main(String[] args) {
        Decompress de = new Decompress();
        File file = new File("C:\\Users\\chen\\Desktop\\compress.txt");
        try {
            String s = de.read(file);

            System.out.println("s："+s);
            String data = de.codeToStr(s);
            System.out.println("data："+data);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }

    }

    public HashMap<String,String> codingMap;

    //1.读取压缩后的数据
    public String read(File file)throws Exception{
        FileInputStream fis = new FileInputStream(file);
        ObjectInputStream ois = new ObjectInputStream(fis);

        //读码表
        codingMap = (HashMap<String,String>)ois.readObject();

        List<Integer> dataList = new ArrayList<>();

        //读压缩数据
        int b;
        while((b = fis.read()) != -1){
            dataList.add(b);
        }

        StringBuilder stringBuilder = new StringBuilder();
        //补位数
        int last = dataList.get(dataList.size()-1);
        System.out.println("last:"+ last);
        String typeStr = "";
        for(int i=0;i<dataList.size()-1;i++){
            String s = Integer.toBinaryString(dataList.get(i));
            if(s.length() != 8){
                //前缀补0

            }
            stringBuilder.append(s);
        }
        String data = stringBuilder.substring(0,stringBuilder.length()-last);
        return data;
    }

    //2.把bit 编码根码表比较，匹配对应的编码
    public String codeToStr(String code){
        //保存还原后的数据

    }
}
